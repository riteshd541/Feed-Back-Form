{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anil kumar\\\\Desktop\\\\techbrj\\\\dynamic-feedback-form\\\\src\\\\FeedbackForm.js\";\n// FeedbackForm.js\n\nimport React, { Component } from \"react\";\nimport { FormControl, RadioGroup, FormControlLabel, Radio, Button } from \"@material-ui/core\";\nimport \"./FeedbackForm.css\";\nclass FeedbackForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = (index, choice) => {\n      this.setState(prevState => ({\n        choices: {\n          ...prevState.choices,\n          [index]: choice // Update the choice for the specific question index\n        }\n      }));\n    };\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        questions,\n        choices\n      } = this.state;\n      if (Object.keys(choices).length !== questions.length) {\n        alert(\"Please answer all questions before submitting.\");\n        return;\n      } else {\n        alert(\"Form submitted successfully\");\n      }\n      const feedback = {\n        feedback: {\n          questions,\n          choices\n        }\n      };\n      console.log(feedback);\n    };\n    this.state = {\n      questions: [],\n      choices: {} // Change state structure to an object\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://brijfeedback.pythonanywhere.com/api/get-feedback-questions/?unitID=1\").then(response => response.json()).then(data => {\n      if (data && data.feedbackQuestions && data.choices) {\n        this.setState({\n          questions: data.feedbackQuestions,\n          choices: {} // Initialize choices as an empty object\n        });\n      } else {\n        console.error(\"Error fetching data: Questions or choices data not found\");\n      }\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }\n  render() {\n    const {\n      questions,\n      choices\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, \"Feedback form\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }, questions.map((question, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-container\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }, question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RadioGroup, {\n      value: choices[index] || \"\" // Use selected choice from state\n      ,\n      onChange: e => this.handleChange(index, e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 19\n      }\n    }, Array.isArray(data.choices[index]) && data.choices[index].map((choice, choiceIndex) => /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: choiceIndex,\n      value: choice,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 36\n        }\n      }),\n      label: choice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 25\n      }\n    }))))))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n}\nexport default FeedbackForm;","map":{"version":3,"names":["React","Component","FormControl","RadioGroup","FormControlLabel","Radio","Button","FeedbackForm","constructor","props","handleChange","index","choice","setState","prevState","choices","handleSubmit","e","preventDefault","questions","state","Object","keys","length","alert","feedback","console","log","componentDidMount","fetch","then","response","json","data","feedbackQuestions","error","catch","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","map","question","key","component","value","onChange","target","Array","isArray","choiceIndex","control","label","type","variant","color"],"sources":["C:/Users/anil kumar/Desktop/techbrj/dynamic-feedback-form/src/FeedbackForm.js"],"sourcesContent":["// FeedbackForm.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport \"./FeedbackForm.css\";\r\n\r\nclass FeedbackForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      choices: {}, // Change state structure to an object\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://brijfeedback.pythonanywhere.com/api/get-feedback-questions/?unitID=1\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data && data.feedbackQuestions && data.choices) {\r\n          this.setState({\r\n            questions: data.feedbackQuestions,\r\n            choices: {}, // Initialize choices as an empty object\r\n          });\r\n        } else {\r\n          console.error(\r\n            \"Error fetching data: Questions or choices data not found\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }\r\n\r\n  handleChange = (index, choice) => {\r\n    this.setState((prevState) => ({\r\n      choices: {\r\n        ...prevState.choices,\r\n        [index]: choice, // Update the choice for the specific question index\r\n      },\r\n    }));\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { questions, choices } = this.state;\r\n\r\n    if (Object.keys(choices).length !== questions.length) {\r\n      alert(\"Please answer all questions before submitting.\");\r\n      return;\r\n    } else {\r\n      alert(\"Form submitted successfully\");\r\n    }\r\n\r\n    const feedback = { feedback: { questions, choices } };\r\n    console.log(feedback);\r\n  };\r\n\r\n  render() {\r\n    const { questions, choices } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Feedback form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {questions.map((question, index) => (\r\n            <div className=\"question-container\" key={index}>\r\n              <p className=\"question-text\">{question}</p>\r\n              <div className=\"radio-options\">\r\n                <FormControl component=\"fieldset\">\r\n                  <RadioGroup\r\n                    value={choices[index] || \"\"} // Use selected choice from state\r\n                    onChange={(e) => this.handleChange(index, e.target.value)}\r\n                  >\r\n                    {Array.isArray(data.choices[index]) &&\r\n                      data.choices[index].map((choice, choiceIndex) => (\r\n                        <FormControlLabel\r\n                          key={choiceIndex}\r\n                          value={choice}\r\n                          control={<Radio />}\r\n                          label={choice}\r\n                        />\r\n                      ))}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FeedbackForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}