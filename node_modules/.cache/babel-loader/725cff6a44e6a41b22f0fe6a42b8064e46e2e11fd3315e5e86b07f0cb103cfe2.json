{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anil kumar\\\\Desktop\\\\techbrj\\\\dynamic-feedback-form\\\\src\\\\FeedbackForm.js\";\nimport React, { Component } from \"react\";\nimport { FormControl, RadioGroup, FormControlLabel, Radio, Button } from \"@material-ui/core\";\nimport \"./FeedbackForm.css\";\nclass FeedbackForm extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = (questionIndex, choiceIndex, choice) => {\n      const choices = [...this.state.choices];\n      choices[questionIndex][choiceIndex] = choice;\n      this.setState({\n        choices\n      });\n    };\n    this.handleSubmit = e => {\n      e.preventDefault(); // Prevent form submission\n\n      const {\n        questions,\n        choices\n      } = this.state;\n\n      // Check if any question has not been answered\n      if (choices.some(questionChoices => questionChoices.includes(\"\")) || choices.length !== questions.length) {\n        alert(\"Please answer all questions before submitting.\");\n        return; // Exit early if any question is not answered\n      } else {\n        alert(\"Form submitted successfully\");\n      }\n\n      // Construct feedback object\n      const feedback = {\n        feedback: {\n          questions,\n          choices\n        }\n      };\n\n      // Perform submission logic\n      console.log(feedback); // You can replace this with actual submission logic\n    };\n    this.state = {\n      questions: [],\n      choices: [] // Store choices as an array of arrays\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://brijfeedback.pythonanywhere.com/api/get-feedback-questions/?unitID=1\").then(response => response.json()).then(data => {\n      if (data && data.feedbackQuestions && data.choices) {\n        // Process data and set state\n        this.setState({\n          questions: data.feedbackQuestions,\n          choices: data.choices.map(() => [\"\", \"\", \"\"]) // Initialize choices for each question with 3 empty strings\n        });\n      } else {\n        console.error(\"Error fetching data: Questions or choices data not found\");\n      }\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }\n  render() {\n    const {\n      questions,\n      choices\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, \"Feedback form\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, questions.map((question, questionIndex) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"question-container\",\n      key: questionIndex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"question-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"radio-options\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      component: \"fieldset\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(RadioGroup, {\n      value: choices[questionIndex],\n      onChange: e => this.handleChange(questionIndex, choices[questionIndex].indexOf(e.target.value), e.target.value),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 19\n      }\n    }, choices[questionIndex].map((choice, choiceIndex) => /*#__PURE__*/React.createElement(FormControlLabel, {\n      key: choiceIndex,\n      value: choice,\n      control: /*#__PURE__*/React.createElement(Radio, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 34\n        }\n      }),\n      label: choice,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 23\n      }\n    }))))))), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      variant: \"contained\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, \"Submit\")));\n  }\n}\nexport default FeedbackForm;","map":{"version":3,"names":["React","Component","FormControl","RadioGroup","FormControlLabel","Radio","Button","FeedbackForm","constructor","props","handleChange","questionIndex","choiceIndex","choice","choices","state","setState","handleSubmit","e","preventDefault","questions","some","questionChoices","includes","length","alert","feedback","console","log","componentDidMount","fetch","then","response","json","data","feedbackQuestions","map","error","catch","render","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","question","key","component","value","onChange","indexOf","target","control","label","type","variant","color"],"sources":["C:/Users/anil kumar/Desktop/techbrj/dynamic-feedback-form/src/FeedbackForm.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  FormControl,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Radio,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport \"./FeedbackForm.css\";\r\n\r\nclass FeedbackForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      questions: [],\r\n      choices: [], // Store choices as an array of arrays\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch(\r\n      \"https://brijfeedback.pythonanywhere.com/api/get-feedback-questions/?unitID=1\"\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data && data.feedbackQuestions && data.choices) {\r\n          // Process data and set state\r\n          this.setState({\r\n            questions: data.feedbackQuestions,\r\n            choices: data.choices.map(() => [\"\", \"\", \"\"]), // Initialize choices for each question with 3 empty strings\r\n          });\r\n        } else {\r\n          console.error(\r\n            \"Error fetching data: Questions or choices data not found\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }\r\n\r\n  handleChange = (questionIndex, choiceIndex, choice) => {\r\n    const choices = [...this.state.choices];\r\n    choices[questionIndex][choiceIndex] = choice;\r\n    this.setState({ choices });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault(); // Prevent form submission\r\n\r\n    const { questions, choices } = this.state;\r\n\r\n    // Check if any question has not been answered\r\n    if (\r\n      choices.some((questionChoices) => questionChoices.includes(\"\")) ||\r\n      choices.length !== questions.length\r\n    ) {\r\n      alert(\"Please answer all questions before submitting.\");\r\n      return; // Exit early if any question is not answered\r\n    } else {\r\n      alert(\"Form submitted successfully\");\r\n    }\r\n\r\n    // Construct feedback object\r\n    const feedback = { feedback: { questions, choices } };\r\n\r\n    // Perform submission logic\r\n    console.log(feedback); // You can replace this with actual submission logic\r\n  };\r\n\r\n  render() {\r\n    const { questions, choices } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Feedback form</h1>\r\n        <form onSubmit={this.handleSubmit}>\r\n          {questions.map((question, questionIndex) => (\r\n            <div className=\"question-container\" key={questionIndex}>\r\n              <p className=\"question-text\">{question}</p>\r\n              <div className=\"radio-options\">\r\n                <FormControl component=\"fieldset\">\r\n                  <RadioGroup\r\n                    value={choices[questionIndex]}\r\n                    onChange={(e) =>\r\n                      this.handleChange(\r\n                        questionIndex,\r\n                        choices[questionIndex].indexOf(e.target.value),\r\n                        e.target.value\r\n                      )\r\n                    }\r\n                  >\r\n                    {/* Render each choice as a radio button */}\r\n                    {choices[questionIndex].map((choice, choiceIndex) => (\r\n                      <FormControlLabel\r\n                        key={choiceIndex}\r\n                        value={choice}\r\n                        control={<Radio />}\r\n                        label={choice}\r\n                      />\r\n                    ))}\r\n                  </RadioGroup>\r\n                </FormControl>\r\n              </div>\r\n            </div>\r\n          ))}\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeedbackForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SACEC,WAAW,EACXC,UAAU,EACVC,gBAAgB,EAChBC,KAAK,EACLC,MAAM,QACD,mBAAmB;AAC1B,OAAO,oBAAoB;AAE3B,MAAMC,YAAY,SAASN,SAAS,CAAC;EACnCO,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KA4BfC,YAAY,GAAG,CAACC,aAAa,EAAEC,WAAW,EAAEC,MAAM,KAAK;MACrD,MAAMC,OAAO,GAAG,CAAC,GAAG,IAAI,CAACC,KAAK,CAACD,OAAO,CAAC;MACvCA,OAAO,CAACH,aAAa,CAAC,CAACC,WAAW,CAAC,GAAGC,MAAM;MAC5C,IAAI,CAACG,QAAQ,CAAC;QAAEF;MAAQ,CAAC,CAAC;IAC5B,CAAC;IAAA,KAEDG,YAAY,GAAIC,CAAC,IAAK;MACpBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;;MAEpB,MAAM;QAAEC,SAAS;QAAEN;MAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;;MAEzC;MACA,IACED,OAAO,CAACO,IAAI,CAAEC,eAAe,IAAKA,eAAe,CAACC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAC/DT,OAAO,CAACU,MAAM,KAAKJ,SAAS,CAACI,MAAM,EACnC;QACAC,KAAK,CAAC,gDAAgD,CAAC;QACvD,OAAO,CAAC;MACV,CAAC,MAAM;QACLA,KAAK,CAAC,6BAA6B,CAAC;MACtC;;MAEA;MACA,MAAMC,QAAQ,GAAG;QAAEA,QAAQ,EAAE;UAAEN,SAAS;UAAEN;QAAQ;MAAE,CAAC;;MAErD;MACAa,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC,CAAC,CAAC;IACzB,CAAC;IAtDC,IAAI,CAACX,KAAK,GAAG;MACXK,SAAS,EAAE,EAAE;MACbN,OAAO,EAAE,EAAE,CAAE;IACf,CAAC;EACH;EAEAe,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CACH,8EACF,CAAC,CACEC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACd,IAAIA,IAAI,IAAIA,IAAI,CAACC,iBAAiB,IAAID,IAAI,CAACpB,OAAO,EAAE;QAClD;QACA,IAAI,CAACE,QAAQ,CAAC;UACZI,SAAS,EAAEc,IAAI,CAACC,iBAAiB;UACjCrB,OAAO,EAAEoB,IAAI,CAACpB,OAAO,CAACsB,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAE;QACjD,CAAC,CAAC;MACJ,CAAC,MAAM;QACLT,OAAO,CAACU,KAAK,CACX,0DACF,CAAC;MACH;IACF,CAAC,CAAC,CACDC,KAAK,CAAED,KAAK,IAAKV,OAAO,CAACU,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE;EA+BAE,MAAMA,CAAA,EAAG;IACP,MAAM;MAAEnB,SAAS;MAAEN;IAAQ,CAAC,GAAG,IAAI,CAACC,KAAK;IAEzC,oBACEf,KAAA,CAAAwC,aAAA;MAAKC,SAAS,EAAC,WAAW;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACxB/C,KAAA,CAAAwC,aAAA;MAAAE,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAI,eAAiB,CAAC,eACtB/C,KAAA,CAAAwC,aAAA;MAAMQ,QAAQ,EAAE,IAAI,CAAC/B,YAAa;MAAAyB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAC/B3B,SAAS,CAACgB,GAAG,CAAC,CAACa,QAAQ,EAAEtC,aAAa,kBACrCX,KAAA,CAAAwC,aAAA;MAAKC,SAAS,EAAC,oBAAoB;MAACS,GAAG,EAAEvC,aAAc;MAAA+B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBACrD/C,KAAA,CAAAwC,aAAA;MAAGC,SAAS,EAAC,eAAe;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAEE,QAAY,CAAC,eAC3CjD,KAAA,CAAAwC,aAAA;MAAKC,SAAS,EAAC,eAAe;MAAAC,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC5B/C,KAAA,CAAAwC,aAAA,CAACtC,WAAW;MAACiD,SAAS,EAAC,UAAU;MAAAT,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,gBAC/B/C,KAAA,CAAAwC,aAAA,CAACrC,UAAU;MACTiD,KAAK,EAAEtC,OAAO,CAACH,aAAa,CAAE;MAC9B0C,QAAQ,EAAGnC,CAAC,IACV,IAAI,CAACR,YAAY,CACfC,aAAa,EACbG,OAAO,CAACH,aAAa,CAAC,CAAC2C,OAAO,CAACpC,CAAC,CAACqC,MAAM,CAACH,KAAK,CAAC,EAC9ClC,CAAC,CAACqC,MAAM,CAACH,KACX,CACD;MAAAV,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAGAjC,OAAO,CAACH,aAAa,CAAC,CAACyB,GAAG,CAAC,CAACvB,MAAM,EAAED,WAAW,kBAC9CZ,KAAA,CAAAwC,aAAA,CAACpC,gBAAgB;MACf8C,GAAG,EAAEtC,WAAY;MACjBwC,KAAK,EAAEvC,MAAO;MACd2C,OAAO,eAAExD,KAAA,CAAAwC,aAAA,CAACnC,KAAK;QAAAqC,MAAA;QAAAC,QAAA;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAA,CAAE,CAAE;MACnBU,KAAK,EAAE5C,MAAO;MAAA6B,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CACf,CACF,CACS,CACD,CACV,CACF,CACN,CAAC,eACF/C,KAAA,CAAAwC,aAAA,CAAClC,MAAM;MAACoD,IAAI,EAAC,QAAQ;MAACC,OAAO,EAAC,WAAW;MAACC,KAAK,EAAC,SAAS;MAAAlB,MAAA;MAAAC,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,GAAC,QAElD,CACJ,CACH,CAAC;EAEV;AACF;AAEA,eAAexC,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}